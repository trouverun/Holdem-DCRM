syntax = "proto3";

message Observation {
    int32 player = 1;
    bytes observations = 2;
    bytes observation_counts = 3;
    int32 shape = 4;
    int32 sequence_length = 5;
}

message Prediction {
    bytes action_prediction = 1;
    bytes bet_prediction = 2;
}

message SampledData {
    int32 player = 1;
    bytes observations = 2;
    bytes observation_counts = 3;
    bytes action_data = 4;
    bytes bet_data = 5;
    int32 shape = 6;
    int32 sequence_length = 7;
}

message IntMessage {
    int32 value = 1;
}

message Selection {
    int32 player = 1;
    int32 strategy_version = 2;
}

message Empty {

}

service Actor {
    rpc GetRegrets(Observation) returns (Prediction);
    rpc GetStrategies(Observation) returns (Prediction);
    rpc SetStrategy(Selection) returns (Empty);
}

service Learner {
    rpc AddRegrets(SampledData) returns (Empty);
    rpc AddStrategies(SampledData) returns (Empty);
    rpc TrainRegrets(IntMessage) returns (Empty);
    rpc TrainStrategy(Empty) returns (Empty);
    rpc AvailableStrategies(Empty) returns (IntMessage);
}

message IterationSettings {
    int32 k = 1;
    int32 traversals_per_process = 2;
    int32 n_processes = 3;
}

message EvaluationSettings {

}

message Identifier {
    int32 worker_id = 1;
}

service Master {
    rpc CompleteTraversal(Identifier) returns (Empty);
}

service Slave {
    rpc SetIdentifier(Identifier) returns (Empty);
    rpc RunIterations(IterationSettings) returns (Empty);
    rpc RunEvaluations(EvaluationSettings) returns (Empty);
}